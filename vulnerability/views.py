from django.shortcuts import render, get_object_or_404, redirect

from vulnerability.models import Week, Assessment
from vulnerability.forms import WeekForm, AssessmentForm

from django.views.generic.list import ListView


def week_list(request):
    weeks = Week.objects.all().order_by('id')
    return render(request,'vulnerability/week_list.html', {'weeks': weeks})


def week_edit(request, week_id=None):
    if week_id:
        week = get_object_or_404(Week, pk=week_id)
    else:         
        week = Week()

    if request.method == 'POST':
        form = WeekForm(request.POST, instance=week)  
        if form.is_valid():
            week = form.save(commit=False)
            week.save()
            return redirect('vulnerability:week_list')
    else:
        form = WeekForm(instance=week)  

    return render(request, 'vulnerability/week_edit.html', dict(form=form, week_id=week_id))


def week_del(request, week_id):
    week = get_object_or_404(Week, pk=week_id)
    week.delete()
    return redirect('vulnerability:week_list')


class AssessmentList(ListView):
    context_object_name='assessments'
    template_name='vulnerability/assessment_list.html'
    paginate_by = 2


    def get(self, request, *args, **kwargs):
        week = get_object_or_404(Week, pk=kwargs['week_id'])  
        assessments = week.assessments.all().order_by('id')   
        self.object_list = assessments

        context = self.get_context_data(object_list=self.object_list, week=week)    
        return self.render_to_response(context)


def assessment_edit(request, week_id, assessment_id=None):
    week = get_object_or_404(Week, pk=week_id)  
    if assessment_id: 
        assessment = get_object_or_404(Assessment, pk=assessment_id)
    else:              
        assessment = Assessment()

    if request.method == 'POST':
        form = AssessmentForm(request.POST, instance=assessment)  
        if form.is_valid():    
            assessment = form.save(commit=False)
            assessment.week = week
            assessment.save()
            return redirect('vulnerability:assessment_list', week_id=week_id)
    else:
        form = AssessmentForm(instance=assessment)  

    return render(request, 'vulnerability/assessment_edit.html', dict(form=form, week_id=week_id, assessment_id=assessment_id))

def assessment_del(request, week_id, assessment_id):
    assessment = get_object_or_404(Assessment, pk=assessment_id)
    assessment.delete()
    return redirect('vulnerability:assessment_list', week_id=week_id)
